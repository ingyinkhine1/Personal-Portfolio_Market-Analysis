-- Listing All data from each table
SELECT * FROM customer_table;
SELECT * FROM product;
SELECT * FROM region;
SELECT * FROM store;
SELECT * FROM transaction_1997;
SELECT * FROM transaction_1998;

-- Listing the first name and last name of all customers.
SELECT 
first_name,
last_name
FROM customer_table;

-- Combining Full name (using where clause under the condition of safe mode)
Alter TABLE customer_table Add column full_name varchar(40);
UPDATE customer_table
SET full_name = Concat (first_name,' ',last_name)
WHERE customer_id>1;

-- viewing safe mood is on or off
SHOW VARIABLES LIKE 'sql_safe_updates';

-- use when disable safe mood
SET SQL_SAFE_UPDATES = 0;

-- deleting whole column
ALTER TABLE customer_table
DROP full_name;

-- Listing all customers from a specific country (USA)
SELECT * FROM customer_table
WHERE customer_country ="USA";

-- Creating table for USA customer
CREATE Table USA_customer
SELECT * FROM customer_table
WHERE customer_country ="USA";

-- Listing the 10 oldest customers
SELECT * FROM customer_table
ORDER BY birthdate ASC limit 10;

-- Counting the number of customers in each country
SELECT customer_country,
count(*) AS total_customer
FROM customer_table 
Group By customer_country
Order By total_customer ASC;

-- Listing all products
SELECT * FROM product;

-- Selecting only one product name from product table
SELECT * FROM product
WHERE product_name = "American Beef Bologna";

-- Listing all products with a price greater than $50, ordered by price in descending order
SELECT * from product
Where product_cost > 1
ORDER BY product_cost DESC;

-- Listing all stores in the 'Central West' region
Select store.store_name
from store
Join region on store.region_id = region.region_id
Where region.sales_region = "Central West";

-- Counting the number of stores in each region
SELECT region.sales_district, COUNT(*) AS total_store
FROM Store
JOIN region ON store.region_id = region.region_id
GROUP BY region.sales_district;

-- Calculating the total revenue generated by each store
SELECT
    store.store_id, 
    store.store_name,
    SUM(transaction_1997.quantity * product.product_retail_price) AS total_revenue
FROM
    transaction_1997
JOIN
    product ON transaction_1997.product_id = product.product_id
JOIN
    store ON transaction_1997.store_id = store.store_id
GROUP BY store.store_id, store.store_name
ORDER BY
    total_revenue DESC;
    
-- Creating table for total quantity sold by each brand
Create table product_brand_sale As
Select product.product_brand,
	sum(transaction_1997.quantity) AS total_quantity_sold
	FROM transaction_1997
    JOIN product ON product.product_id=transaction_1997.product_id
    Group By product.product_brand;
    
   -- Finding the most popular product brand category (most quantity sold) 
    Select product.product_brand,
	sum(transaction_1997.quantity) AS total_quantity_sold
	FROM transaction_1997
    JOIN product ON product.product_id=transaction_1997.product_id
    Group By product.product_brand
    Order By total_quantity_sold DESC
    limit 1;
    
-- Calculating the total revenue generated by each region
SELECT
    region.region_id, 
    region.sales_region,
    SUM(transaction_1997.quantity * product.product_retail_price) AS total_revenue
FROM
    transaction_1997
JOIN
    product ON transaction_1997.product_id = product.product_id
JOIN
    store ON transaction_1997.store_id = store.store_id
JOIN
	region ON store.region_id = region.region_id
GROUP BY region.region_id, region.sales_region
ORDER BY
    total_revenue DESC;

-- Calculate the total spending of each customer
SELECT customer_table.first_name,
	   customer_table.last_name,
       sum(product.product_retail_price*transaction_1997.quantity) AS total_spending
	FROM transaction_1997
JOIN customer_table on customer_table.customer_id=transaction_1997.customer_id
JOIN product on product.product_id=transaction_1997.product_id
GROUP BY customer_table.first_name,
	   customer_table.last_name
ORDER BY total_spending DESC;

-- Finding the average transaction value by product brand type
SELECT 
product.product_brand,
Avg(transaction_1997.quantity*product.product_retail_price) AS avg_txn_value
FROM transaction_1997
JOIN product on product.product_id = transaction_1997.product_id
Group By product.product_brand;
